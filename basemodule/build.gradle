apply plugin: 'com.android.library'

//添加这两行
//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.jfrog.bintray'
android {
    compileSdkVersion 28
    lintOptions {
        abortOnError false
    }
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDir 'libs'
            jni.srcDirs = []    //disable automatic ndk-build
        }
    }
    dataBinding {
        enabled = true
    }
}
allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.google.com' }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    /* fragmentation */

    //    api 'me.yokeyword:fragmentation:1.3.6'

    //    api 'me.yokeyword:fragmentation-swipeback:1.3.6'

    api 'androidx.constraintlayout:constraintlayout:1.1.3'

    /* glide */
    api 'com.github.bumptech.glide:glide:4.11.0'
    api 'jp.wasabeef:glide-transformations:2.0.1'

    /* https://www.jianshu.com/p/b343fcff51b0 */
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.31'

    /* https://github.com/Blankj/AndroidUtilCode/blob/master/lib/utilcode/README-CN.md */
    api 'com.blankj:utilcode:1.22.1'

    /* https://github.com/crazycodeboy/TakePhoto */
    api 'org.devio.takephoto:takephoto_library:4.1.0'

    /* https://github.com/H07000223/FlycoTabLayout/blob/master/README_CN.md */
    api 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    /* https://github.com/scwang90/SmartRefreshLayout */
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-16'
    api 'androidx.recyclerview:recyclerview:1.0.0'

    //没有使用特殊Header，可以不加这行
    api 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-16'

    /* https://github.com/gyf-dev/ImmersionBar */
    api 'com.gyf.immersionbar:immersionbar:2.3.3-beta09'

    /* SuperTextView */
    api 'com.github.lygttpod:SuperTextView:2.1.7'

    /* gson */
    api 'com.google.code.gson:gson:2.2.4'

    /* https://github.com/yipianfengye/android-zxingLibrary */
    api 'cn.yipianfengye.android:zxing-library:2.2'
    /* arouter */
    api 'com.alibaba:arouter-api:1.3.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'

    /* eventbus */
    api 'org.greenrobot:eventbus:3.0.0'

    /* https://github.com/youth5201314/banner */
    api 'com.youth.banner:banner:1.4.10'

    /* https://github.com/Bigkoo/Android-ConvenientBanner */
    api 'com.bigkoo:convenientbanner:2.0.5'

    //bugly
//    api 'com.tencent.bugly:crashreport:latest.release'
    api 'com.tencent.bugly:crashreport_upgrade:latest.release'
    api 'com.tencent.bugly:nativecrashreport:latest.release'

    /* https://github.com/gcacace/android-signaturepad */
    api 'com.github.gcacace:signature-pad:1.2.1'

    //高德定位
    api 'com.amap.api:location:latest.integration'

    //flexbox
    api 'com.google.android:flexbox:1.1.0'

    //弹窗
    api 'com.noober.floatmenu:common:1.0.4'

    //百度
    api files('libs/BaiduLBS_Android.jar')
    api files('libs/dk-ble-nfc-sdk-v2.1.0 20170810.jar')
//    api files('libs/tbs_sdk_thirdapp_v3.2.0.1104_43200_sharewithdownload_withfilereader_withoutGame_obfs_20170609_115346.jar')
    api 'org.apache.commons:commons-lang3:3.7'


    //rxEasyHttp https://github.com/darryrzhong/RxEasyHttp
    api 'com.zhouyou:rxeasyhttp:2.1.5'
    //https://github.com/tbruyelle/RxPermissions
    api 'com.github.tbruyelle:rxpermissions:0.10.2'
    //lifecycle
    api 'androidx.lifecycle:lifecycle-runtime:2.2.0'
    api 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    api 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
    api 'androidx.lifecycle:lifecycle-livedata:2.2.0'
    api "com.trello.rxlifecycle2:rxlifecycle:2.2.2"
    api "com.trello.rxlifecycle2:rxlifecycle-components:2.2.2"
    //


}


/**************************************************下面是上传jcenter的配置**************************************************/
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def siteUrl = 'https://github.com/AlexFugui/VoicePlayer' //项目在github主页地址
def gitUrl = 'https://github.com/AlexFugui/VoicePlayer.git'   //Git仓库的地址
// 唯一包名，比如implementation 'com.davis.ui.pulltorefresh:pulltorefresh:2.1.0'中的com.davis.ui.pulltorefresh就是这里配置的。
group = "com.alex.voice-player"//包名,可以自定义,写aa.bb.cc都可以
//项目引用的版本号，比如implementation 'com.davis.ui.pulltorefresh:pulltorefresh:2.1.0'中的2.1.0就是这里配置的。
version = "1.0.0"//发布aar的库版本

install {
    repositories.mavenInstaller {
        // 生成pom.xml和参数
        pom {
            project {
                packaging 'aar'
                // 项目描述，复制我的话，这里需要修改。
                name 'voice-player'// 可选，项目名称。
                description 'Android voice-player'// 可选，项目描述。
                url siteUrl // 项目主页，这里是引用上面定义好。

                // 软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                //填写开发者基本信息，复制我的，这里需要修改。
                developers {
                    developer {
                        id 'AlexFugui' // 开发者的id,随便写
                        name 'AlexFugui' // 开发者名字,,随便写
                        email 'xxxxxxxx@xx.com' // 开发者邮箱。
                    }
                }

                // SCM，直接复制，这里不需要修改。
                scm {
                    connection gitUrl // Git仓库地址。
                    developerConnection gitUrl // Git仓库地址。
                    url siteUrl // 项目主页。
                }
            }
        }
    }
}

// 生成jar包的task，不需要修改。
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

// 生成jarDoc的task，不需要修改。
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    // destinationDir = file("../javadoc/")
    failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
}

// 生成javaDoc的jar，不需要修改。
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取。
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user") // Bintray的用户名。
    key = properties.getProperty("bintray.apikey") // Bintray刚才保存的ApiKey。

    configurations = ['archives']
    pkg {
        repo = "maven"  //Repository名字 需要自己在bintray网站上先添加
        name = "voice-player"
// 发布到Bintray上的项目名字，这里的名字不是implementation 'com.davis.ui.pulltorefresh:pulltorefresh:2.1.0'中的pulltorefresh。
        userOrg = 'alexfugui'//Bintray的组织中,你的id
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true // 是否是公开项目。
    }
}